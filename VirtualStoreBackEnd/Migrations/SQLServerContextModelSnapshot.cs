// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualStoreBackEnd.Data;

#nullable disable

namespace VirtualStoreBackEnd.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    partial class SQLServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VirtualStoreBackEnd.Model.ImagesModel", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<byte[]>("images1")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image1");

                    b.Property<byte[]>("images2")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image2");

                    b.Property<byte[]>("images3")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image3");

                    b.Property<byte[]>("images4")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image5");

                    b.Property<byte[]>("images5")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image4");

                    b.HasKey("_id");

                    b.ToTable("images");
                });

            modelBuilder.Entity("VirtualStoreBackEnd.Model.ProductModel", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<decimal>("Price")
                        .IsConcurrencyToken()
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("price");

                    b.Property<decimal>("PriceMarket")
                        .IsConcurrencyToken()
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("price_market");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("short_name");

                    b.HasKey("_id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("VirtualStoreBackEnd.Model.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
